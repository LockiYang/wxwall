<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util-4.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/jdbc
			http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
			http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:wxwall.properties" />

	<!-- Spring context bean -->
	<bean id="springContextHolder" class="com.wxwall.common.utils.SpringContextHolder"
		lazy-init="false" />

	<!-- 自动扫描(除了@Controller) -->
	<context:component-scan base-package="com.wxwall">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 加载属性文件 -->
	<util:properties id="appProperties" location="classpath:wxwall.properties" />

	<!-- 线程池 -->
	<bean id="threadPoolTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" /><!-- 核心线程数 -->
		<property name="maxPoolSize" value="100" /><!-- 最大线程数 -->
		<property name="queueCapacity" value="1000" /><!-- 队列最大长度 -->
		<property name="keepAliveSeconds" value="300" /><!-- 线程允许空闲时间 -->
		<property name="rejectedExecutionHandler"><!-- 线程拒绝任务的处理策略 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	<task:scheduler id="taskScheduler" pool-size="10"/>
	<task:annotation-driven executor="threadPoolTaskExecutor" scheduler="taskScheduler" />

	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.wxwall.url}" />
		<property name="username" value="${jdbc.wxwall.user}" />
		<property name="password" value="${jdbc.wxwall.passwd}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="150" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,wall" />
	</bean>

	<!-- 初始化数据结构与默认数据 -->
	<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
		<jdbc:script location="classpath:data/import-data.sql" encoding="UTF-8" />
	</jdbc:initialize-database>

	<!-- 缓存配置 -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:cache/ehcache-local.xml" />
	</bean>
	
	<!-- druid spring监控 -->
<!-- 	<bean id="druid-stat-interceptor" -->
<!-- 		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"> -->
<!-- 	</bean> -->
<!-- 	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" -->
<!-- 	scope="prototype"> -->
<!-- 		<property name="patterns"> -->
<!-- 			<list> -->
<!-- 				<value>com.wxwall.modules.wechat.service.*</value> -->
<!-- 				<value>com.wxwall.modules.wechat.dao.*</value> -->
<!-- 				<value>com.wxwall.modules.wechat.web.controller.*</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
<!-- 	<aop:config proxy-target-class="true"> -->
<!-- 		<aop:advisor advice-ref="druid-stat-interceptor" -->
<!-- 			pointcut-ref="druid-stat-pointcut" /> -->
<!-- 	</aop:config> -->

	<!-- 定义aspectj -->
<!-- 	<aop:aspectj-autoproxy proxy-target-class="true" /> -->

</beans>