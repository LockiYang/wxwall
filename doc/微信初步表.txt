create table if not exists t_user(
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 user_name varchar(200) comment '用户名',
 user_password varchar(100) comment '密码',
 user_email varchar(100) comment '邮箱',
 cell_phone_num varchar(20) comment '手机号码',
 qq_num varchar(20) comment 'QQ号码',
 company_name varchar(200) comment '商家名',
 description varchar(500) comment '商家描述',
 registered_time datetime comment '注册时间',
 updated_time datetime comment '更新时间',
 last_login datetime comment '上次登录时间',
 valid_time datetime comment '有效时间',
 user_type TINYINT comment '用户类型 0:vender 1:business 2:superuser',
 country varchar(150) comment '注册用户国家',
 province varchar(150) comment '注册用户省份',
 city varchar(150) comment '注册用户城市',
 street_name varchar(150) comment '注册用户街道地址',
 mid varchar(255) comment '用户唯一ID',
 token varchar(255) comment '用户token 这两个字段作用在于为用户进行微信验证时使用',
 weixin_app_id varchar(255) comment '微信公众号',
 weixin_image varchar(255) comment '微信二维码图片',
 random_code varchar(255) comment '随机码(激活帐户与生成重设密码链接时使用)'
);
//微信信息
create table if not exists t_wechat_app(
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 wechat_app_id varchar(255) comment '微信公众号ID',
 wechat_app_secret varchar(255) comment '微信公众号安全密钥',
 wechat_app_name varchar(255) comment '微信公众号',
 mid varchar(255) comment '用户唯一ID',
 token varchar(255) comment '用户token 这两个字段作用在于为用户进行微信验证时使用',
 weixin_image varchar(255) comment '微信二维码图片',
 user_id BIGINT comment '外键,用户账户ID'
);

alter table t_wechat_app add constraint Foreign Key(user_id) References t_user(id) ON DELETE CASCADE ON UPDATE CASCADE;
//微信交互信息
create table if not exists t_wechat_interaction (
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 app_id BIGINT comment '微信id',
 keyword varchar(255) comment '回复关键字',
 interactive_type TINYINT comment '交互类型, 1、关键词自动回复2、被添加自动回复3、消息自动回复',
 content_type TINYINT comment '回复类型 1：文本 2：图文',
 header varchar(255) comment '标题',
 picture varchar(255) comment '图片地址',
 url varchar(255) comment '图片连接地址',
 description varchar(255) comment '描述',
 text varchar(255) comment '文本内容',
 status TINYINT comment '状态 1:审核 2：未审核',
 create_time datetime comment '创建时间',
 update_time datetime comment '更新时间'
);
alter table t_wechat_interaction add constraint Foreign Key(app_id) References t_wechat_app(id) ON DELETE CASCADE ON UPDATE CASCADE;

//活动
create table if not exists t_wechat_activity (
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 subject varchar(255) comment '活动主题',
 act_start datetime comment '活动开始时间',
 act_end datetime comment '活动结束时间',
 act_desc varchar(255) comment '活动介绍',
 status TINYINT comment '状态 1:未审核 2：已审核 3：准备中 4：进行中 5:已经结束',
 is_prize TINYINT comment '是否抽奖 1:否 2：是'
);

//微信参加活动名单
create table if not exists t_wechat_user_activity (
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 activity_id BIGINT comment '活动id',
 open_id varchar(255) comment '参加微信用户唯一标记',
 user_name varchar(255) comment '微信用户昵称',
 user_sex varchar(255) comment '微信性别',
 user_headimgurl varchar(255) comment '微信头像',
 user_language varchar(255) comment '微信语言',
 user_city varchar(255) comment '微信城市',
 user_province varchar(255) comment '微信省份',
 user_country varchar(255) comment '微信国家',
 create_time datetime comment '创建时间'
);

alter table t_wechat_user_activity add constraint Foreign Key(activity_id) References t_wechat_activity(id) ON DELETE CASCADE ON UPDATE CASCADE;
//上墙内容
create table if not exists t_wechat_activity_upbang (
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 activity_id BIGINT comment '活动id',
 user_activity_id  BIGINT comment '微信用户id',
 content varchar(255) comment '文本内容',
 img_url varchar(255) comment '图片内容',
 create_time datetime comment '创建时间',
 status TINYINT comment '状态 1:审核 2：未审核'
);
alter table t_wechat_activity_interactive add constraint Foreign Key(activity_id) References t_wechat_app(id) ON DELETE CASCADE ON UPDATE CASCADE;
alter table t_wechat_activity_interactive add constraint Foreign Key(activity_id) References t_wechat_activity(id) ON DELETE CASCADE ON UPDATE CASCADE;

//奖项设置
create table if not exists t_activity_prize (
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 activity_id BIGINT comment '活动id',
 prize_name varchar(255) comment '奖项名',
 desc varchar(255) comment '描述',
 img varchar(255) comment '预览图片',
 win_num BIGINT comment '中奖人数',
 is_set_list comment '是否设置黑白名单',
 create_time datetime comment '创建时间'
);
alter table t_activity_prize add constraint Foreign Key(activity_id) References t_wechat_activity(id) ON DELETE CASCADE ON UPDATE CASCADE;

//微信用户抽奖白名单黑名单
create table if not exists t_wechat_user_prize_default_list (
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 activity_prize_id BIGINT comment '奖项id',
 user_id BIGINT comment '微信用户id',
 user_type TINYINT comment '状态 1:白名单 2：黑名单'
);
alter table t_wechat_user_prize_white_list add constraint Foreign Key(activity_prize_id) References t_activity_prize(id) ON DELETE CASCADE ON UPDATE CASCADE;
alter table t_wechat_user_prize_white_list add constraint Foreign Key(activity_id) References t_wechat_user_activity(id) ON DELETE CASCADE ON UPDATE CASCADE;

//微信用户抽奖名单
create table if not exists t_wechat_user_prize_list (
 id BIGINT comment 'ID' primary key AUTO_INCREMENT,
 activity_prize_id BIGINT comment '奖项id',
 user_id BIGINT comment '微信用户id'
);
alter table t_wechat_user_prize_white_list add constraint Foreign Key(activity_prize_id) References t_activity_prize(id) ON DELETE CASCADE ON UPDATE CASCADE;
alter table t_wechat_user_prize_white_list add constraint Foreign Key(activity_id) References t_wechat_user_activity(id) ON DELETE CASCADE ON UPDATE CASCADE;





服务器信息：
120.24.82.179:root/Ganjun198762
svn info svn://120.24.82.179/wxwall/trunk
(用户名:yangming/yangming|mochengwei/mochengwei|tangwenhua/tangwenhua)
采用maven编译

创建用户
set password for root@localhost=password('root');
insert into mysql.user(Host,User,Password) values("localhost","wxwall",password("wxwall"));
flush privileges;
insert into mysql.user(Host,User,Password) values("%","wxwall",password("wxwall"));
flush privileges;

授权
grant all privileges on wxwall.* to wxwall@'%' identified by 'wxwall';
grant all privileges on wxwall.* to wxwall@'localhost' identified by 'wxwall';
flush privileges;